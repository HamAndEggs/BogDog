{
    "configurations": {
        "mesa-GLES": {
            "default": true,
            "target": "executable",
            "compiler": "gcc",
            "linker": "gcc",
            "archiver": "ar",
            "standard": "c++14",
            "optimisation": "0",
            "debug_level": "2",
            "warnings_as_errors": false,
            "enable_all_warnings": false,
            "fatal_errors": false,
            "include": [
                "/usr/include/",
                "./source/"
            ],
            "libs": [
                "stdc++",
                "pthread",
                "m",
                "GLESv2",
                "EGL"
            ],
            "define": [
                "DEBUG_BUILD",
                "TARGET_GLES",
                "PLATFORM_MESA"
            ]
        },
        "bcm_host-GLES": {
            "default": false,
            "target": "executable",
            "compiler": "gcc",
            "linker": "gcc",
            "archiver": "ar",
            "standard": "c++14",
            "optimisation": "0",
            "debug_level": "2",
            "warnings_as_errors": false,
            "enable_all_warnings": false,
            "fatal_errors": false,
            "include": [
                "/usr/include/",
                "./source/",
                "/opt/vc/include/"
            ],
            "libs": [
                "stdc++",
                "pthread",
                "m",
                "GLESv2",
                "EGL",
                "bcm_host"
            ],
            "libpaths":
            [
                "/opt/vc/lib"
            ],
            "define": [
                "DEBUG_BUILD",
                "TARGET_GLES",
                "PLATFORM_BCM_HOST"
            ]
        }
    },
    "source_files": [
        "source/InFile.cpp",
        "source/View.cpp",
        "source/common.cpp",
        "source/gfx/ImageLoader.cpp",
        "source/gfx/Mesh.cpp",
        "source/gfx/ShapeBuilder.cpp",
        "source/gl/GLBuffer.cpp",
        "source/gl/GLShader.cpp",
        "source/gl/GLShaderColour.cpp",
        "source/gl/GLShaderColourTex.cpp",
        "source/gl/OpenGLES20.cpp",
        "source/maths/Box.cpp",
        "source/maths/Frustrum.cpp",
        "source/maths/Maths.cpp",
        "source/maths/Matrix.cpp",
        "source/maths/Plane.cpp",
        "source/maths/Quaternion.cpp",
        "source/maths/SinCos.cpp",
        "source/maths/Vector2.cpp",
        "source/maths/Vector3.cpp",
        "Examples/HelloTexture/main.cpp"
    ]
}